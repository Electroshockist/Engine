  Material.cpp
c:\users\erico\files\engine\engine\library\graphics\materials\material.cpp(56): warning C4244: 'argument': conversion from '_First' to 'GLfloat', possible loss of data
          with
          [
              _First=unsigned int
          ]
c:\users\erico\files\engine\engine\library\graphics\materials\material.cpp(60): warning C4244: 'argument': conversion from 'T' to 'GLfloat', possible loss of data
          with
          [
              T=glm::u32
          ]
c:\users\erico\files\engine\engine\library\graphics\materials\material.cpp(64): warning C4244: 'argument': conversion from 'T' to 'GLfloat', possible loss of data
          with
          [
              T=glm::u32
          ]
c:\users\erico\files\engine\engine\library\graphics\materials\material.cpp(68): warning C4244: 'argument': conversion from 'T' to 'GLfloat', possible loss of data
          with
          [
              T=glm::u32
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1305): error C2512: 'MaterialParameter::MaterialParameter': no appropriate default constructor available
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1318): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter,
              _Tuple1=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1318): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<unsigned int>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter,
              _Tuple1=std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0(879): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0(881): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtree(976): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,MaterialParameter>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,MaterialParameter>>>::void_pointer>>,
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Objty=std::pair<const std::string,MaterialParameter>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtree(983): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,MaterialParameter>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,MaterialParameter>>>::void_pointer>>,
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Objty=std::pair<const std::string,MaterialParameter>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtree(1161): note: see reference to function template instantiation 'std::_Tree_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter,
              _Alloc=std::allocator<std::pair<const std::string,MaterialParameter>>,
              _Traits=std::_Tmap_traits<std::string,MaterialParameter,std::less<std::string>,std::allocator<std::pair<const std::string,MaterialParameter>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xtree(1162): note: see reference to function template instantiation 'std::_Tree_node<std::pair<const _Kty,_Ty>,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter,
              _Alloc=std::allocator<std::pair<const std::string,MaterialParameter>>,
              _Traits=std::_Tmap_traits<std::string,MaterialParameter,std::less<std::string>,std::allocator<std::pair<const std::string,MaterialParameter>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(227): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,MaterialParameter,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,MaterialParameter>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(232): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,MaterialParameter,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,MaterialParameter>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(247): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string,
              _Keyty=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(248): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string,
              _Keyty=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(363): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(363): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Ty=std::pair<const std::string,MaterialParameter>,
              _Kty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\map(362): note: while compiling class template member function 'MaterialParameter &std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)'
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter
          ]
  c:\users\erico\files\engine\engine\library\graphics\materials\material.h(31): note: see reference to function template instantiation 'MaterialParameter &std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter
          ]
  c:\users\erico\files\engine\engine\library\graphics\materials\material.h(42): note: see reference to class template instantiation 'std::map<std::string,MaterialParameter,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' being compiled
          with
          [
              _Kty=std::string,
              _Ty=MaterialParameter
          ]
  AManager.cpp
  TextureManager.cpp
  ATexture.cpp
c:\users\erico\files\engine\engine\library\graphics\textures\atexture.cpp(11): error C2039: 'GetInstance': is not a member of 'TextureManager'
  c:\users\erico\files\engine\engine\library\graphics\textures\texturemanager.h(10): note: see declaration of 'TextureManager'
c:\users\erico\files\engine\engine\library\graphics\textures\atexture.cpp(11): error C3861: 'GetInstance': identifier not found
  Mesh.cpp
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(70): error C2082: redefinition of formal parameter 'camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(70): error C2683: 'dynamic_cast': 'ACamera' is not a polymorphic type
  c:\users\erico\files\engine\engine\library\graphics\camera\acamera.h(3): note: see declaration of 'ACamera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(76): error C2664: 'void Mesh::SetupUniforms(Camera *)': cannot convert argument 1 from 'ACamera *' to 'Camera *'
  c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(76): note: Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(95): error C2039: 'getView': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(95): error C2672: 'glm::value_ptr': no matching overloaded function found
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(95): error C2198: 'PFNGLUNIFORMMATRIX4FVPROC': too few arguments for call
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(96): error C2039: 'getPerspective': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(96): error C2672: 'glm::value_ptr': no matching overloaded function found
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(96): error C2198: 'PFNGLUNIFORMMATRIX4FVPROC': too few arguments for call
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(98): error C2039: 'getPosition': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(99): error C2039: 'getLightSources': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(100): error C2039: 'getLightSources': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(104): error C2039: 'getLightSources': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(104): error C2198: 'PFNGLUNIFORM1FPROC': too few arguments for call
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(105): error C2039: 'getLightSources': is not a member of 'Camera'
  c:\users\erico\files\engine\engine\library\graphics\camera\3d\camera.h(7): note: see declaration of 'Camera'
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(105): error C2198: 'PFNGLUNIFORM1FPROC': too few arguments for call
c:\users\erico\files\engine\engine\library\graphics\3d\mesh.cpp(113): error C2110: '+': cannot add two pointers
  Model.cpp
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(23): error C2511: 'void Model::Render(Camera *)': overloaded member function not found in 'Model'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.h(7): note: see declaration of 'Model'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C2597: illegal reference to non-static member 'Model::subMeshes'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C3535: cannot deduce type for 'auto &&' from 'unknown'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C2440: 'initializing': cannot convert from 'unknown' to 'int &&'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): note: Reason: cannot convert from 'unknown' to 'int'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): note: There is no context in which this conversion is possible
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C3536: '<begin>$L0': cannot be used before it is initialized
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C3536: '<end>$L0': cannot be used before it is initialized
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(24): error C2100: illegal indirection
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(25): error C2597: illegal reference to non-static member 'Model::modelInstances'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(54): error C2039: 'getBoundingBox': is not a member of 'Model'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.h(7): note: see declaration of 'Model'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(54): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(54): error C2146: syntax error: missing ';' before identifier 'getBoundingBox'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(54): error C2143: syntax error: missing ';' before '{'
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(54): error C2447: '{': missing function header (old-style formal list?)
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(63): error C2065: 'b': undeclared identifier
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(63): error C2065: 'obj': undeclared identifier
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(64): error C2065: 'obj': undeclared identifier
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(65): error C2065: 'obj': undeclared identifier
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(65): error C2664: 'Mesh::Mesh(const Mesh &)': cannot convert argument 1 from 'GLuint' to 'const Mesh &'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(65): note: Reason: cannot convert from 'GLuint' to 'const Mesh'
  c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(65): note: No constructor could take the source type, or constructor overload resolution was ambiguous
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(67): error C2065: 'obj': undeclared identifier
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(67): error C2541: 'delete': cannot delete objects that are not pointers
c:\users\erico\files\engine\engine\library\graphics\3d\model.cpp(68): error C2065: 'obj': undeclared identifier
  Generating Code...
c:\users\erico\files\engine\engine\library\utilities\amanager.h(17): error C4716: 'AManager<ATexture>::Add': must return a value
